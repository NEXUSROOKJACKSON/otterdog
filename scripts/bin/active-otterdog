#!/bin/bash

export OG_WORKING_ENV="otterdog"

if [ ! -z $OTTERDOG_DEV ]
then
    export OTTERDOG_IMAGE_VERSION=dev
    export OG_WORKING_ENV=${OG_WORKING_ENV}-${OTTERDOG_IMAGE_VERSION}
else
    export OTTERDOG_IMAGE_VERSION=latest
    export OG_WORKING_ENV=${OG_WORKING_ENV}-${OTTERDOG_IMAGE_VERSION}
fi

if [[ ! "$PS1" =~ "$OG_WORKING_ENV" ]]
then
    export __OG_OLD_PATH="$PATH"
    export __OG_OLD_PROMPT="$PS1"
fi

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

__og_setting-alias(){
    alias otterdog='
        docker run --rm -it --name otterdog --hostname otterdog -e BW_SESSION="${BW_SESSION}" \
        -v $HOME/.config/Bitwarden\ CLI/data.json:/root/.config/Bitwarden\ CLI/data.json \
        -v $PWD/otterdog.json:/app/otterdog.json \
        -v $PWD/orgs:/app/orgs \
        -v $HOME/.gnupg:/root/.gnupg \
        -v $HOME/.password-store:/root/.password-store \
        eclipse/otterdog:${OTTERDOG_IMAGE_VERSION}'

    export PATH=$PATH:$SCRIPT_DIR
    export PS1="[${OG_WORKING_ENV}] ${__OG_OLD_PROMPT}"
}

__og_isdocker-image-present(){
    __otterdog_image=$(docker images --filter=reference=eclipse/otterdog:${OTTERDOG_IMAGE_VERSION} --format '{{.ID}}')
    if [ ${#__otterdog_image} -gt 0 ]
    then
        __og_setting-alias
    else
        echo "ERROR!!!: No docker image eclipse/otterdog:${OTTERDOG_IMAGE_VERSION} located"
        echo "Please, execute make docker_build"
        __og_unset-environment
        return 1
    fi

}

__og_unset-environment(){
    unset __OG_OLD_PATH
    unset __OG_OLD_PROMPT
    unset OG_WORKING_ENV
    unset OTTERDOG_DEV
    unset OTTERDOG_IMAGE_VERSION
    for i in $(declare -x | grep -E 'OTTERDOG|_OG_')
    do
        unset $i
    done
    for i in $(declare -F | grep -iE 'otterdog|_og_' | awk '{print $3}')
    do 
        unset -f $i
    done
}

__og_isdocker-installed(){
    if ! command -v docker &> /dev/null
    then
        echo "ERROR!!! docker could not be found"
        return 1
    fi
}

__og_check-environment(){
    __og_isdocker-installed; [[ $? -gt 0 ]] && return 1
    __og_isdocker-image-present; [[ $? -gt 0 ]] && return 1
}

reload-otterdog(){
    source ${SCRIPT_DIR}/$( basename -- "${BASH_SOURCE[0]}" )
}

deactivate-otterdog(){
    unalias otterdog
    export PS1=$__OG_OLD_PROMPT
    export PATH=$__OG_OLD_PATH
    __og_unset-environment
}

__og_main(){
    __og_check-environment
    if [ "$?" -eq 0 ]
    then
        __og_setting-alias
    fi
}

__og_main